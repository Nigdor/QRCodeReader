version: "3"

services:
  api:
    build:
      context: ./
      dockerfile: ./docker/${ENV}/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}/api
    container_name: ${COMPOSE_PROJECT_NAME}_api
    ports:
      - "${API_PORT}:${API_PORT}"
    expose:
      - ${API_PORT}
    environment:
      ENV: ${ENV}
      PORT: ${API_PORT}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_SERVER: ${MONGO_SERVER}
      SECRETJWT: ${SECRETJWT}
    volumes:
      - ./:/usr/src/app
      - public:/usr/src/app/public
    depends_on:
      - mongo
    networks:
      - backend

  mongo:
    image: mongo:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mongo
    expose:
      - ${MONGO_PORT}
    volumes:
      - data-mango:/data/db
      - config-mango:/data/configdb
    command: mongod --noauth --port ${MONGO_PORT}
    networks:
      - backend

  mongo-express:
    image: mongo-express:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mongo-express
    environment:
      ME_CONFIG_EDITORTHEME: "default"
      ME_CONFIG_MONGODB_SERVER: ${MONGO_SERVER}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: "admin"
      ME_CONFIG_BASICAUTH_PASSWORD: "nimda"
    expose:
      - 8081
    ports:
      - "${DB_PORT}:8081"
    depends_on:
      - mongo
    networks:
      - backend
    restart: always

volumes:
  data-mango:
    driver: local
    driver_opts:
      type: none
      device: $PWD/data-node
      o: bind
  config-mango:
    driver: local
  public:
    driver: local
    driver_opts:
      type: none
      device: $PWD/public
      o: bind

networks:
  backend:
    driver: bridge
